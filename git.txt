t config --global user.name "Your Name"
git config --global user.email "email@example.com"

pwd
mkdir learngit
pwd 
cd learngit
git init --初始化仓库

git add git.txt --把文件添加到仓库
git commit -m "wrote a git file" --把文件提交到仓库

git add git.txt 

--修改git文件

git status

git diff

git add git.txt

git commit -m "update git.txt"

git log --查看日志

git log --pretty=oneline --日志格式化(过去的)

cat git.txt --查看文件内容

git reset --hard HEAD^ --回退到上一个版本

git reflog --查看之前的操作 (回到未来)

git reset --hard 3628164 --具体回到某个版本号


管理修改:

git add new.txt --修改后添加

git status

--再次修改

git commit -m "修改"

git diff HEAD -- new.txt --对比查看

git status

git add new.txt

git commit -m "提交"

--第一次修改 -> git add -> 第二次修改 -> git add -> git commit;每次修改，如果不add到暂存区，那就不会加入到commit中。

撤销修改:

cat new.txt

git status

--修改new.txt

git checkout --new.txt --丢弃工作区修改

--修改new.txt

git status

git add new.txt --加载到暂存区

git reset HEAD new.txt --把缓存区的修改撤销掉,重新放回工作区

git status

git checkout --new.txt --丢弃工作区修改

删除文件:

touch rm.txt

git add test.txt

git commit -m "提交文件"

git status

rm test.txt

git status

git checkout -- test.txt --丢弃删除

rm test.txt

git rm test.txt

git commit -m "remove test.txt"


远程仓库:

ssh-keygen -t rsa -C "email@example.com"

--用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥

登陆GitHub，打开“Account settings”，“SSH Keys”页面： “Add SSH Key”

git remote add origin git@github.com:JavaCrazyEngineer/learngit.git --一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库

git push -u origin master --当前分支master推送到远程


git push origin master  --推送最新修改


从远程克隆:

登陆GitHub，创建一个新的仓库，名字叫gitskills：

git clone git@github.com:JavaCrazyEngineer/gitskills.git

touch gitskills.txt

git add gitskills.txt

git commit -m "submit gitskills.txt"

git push origin master


--GitHub给出的地址不止一个，还可以用https://github.com/JavaCrazyEngineer/gitskills.git这样的地址。实际上，Git支持多种协议，默认的git://使用ssh，但也可以使用https等其他协议。



git分支:

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

感觉本站内容不错，读后有收获？

解决冲突:

git branch --查看分支
git checkout -b branch1 --创建分支：git
vi gitskills.txt --Creating a new branch is quick AND simple. esc :wq

git add gitskills.txt
git commit -m "update"

git checkout master

vi gitskills.txt --Creating a new branch is quick &.....AND simple. esc :wq

git add gitskills.txt
git commit -m "update"

git merge branch1  --主干分支都发生修改并提交 会冲突

git status --查看冲突 both,修改 冲突文件 gitskills.txt

git add gitskills.txt

git commit -m "conflict resolved"

git log --graph --pretty=oneline --abbrev-commit --查看合并情况


git branch -d branch1  --删除branch1分支

git log --graph

vi git.txt

dd --删除一行

:.,$d --删除全部







